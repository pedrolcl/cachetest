# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Windows MSYS2 CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v4

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2

    - name: 'Temp dir: temp'
      run: |
        mkdir temp

    - name: 'Restore DLS Cache'
      uses: actions/cache/restore@v4
      id: cache
      with:
        key: soundfont.dls
        path: temp/soundfont.dls
        enableCrossOsArchive: true

    - name: 'Copy soundfont to TEMP'
      if: steps.cache.outputs.cache-hit == 'true'
      run: |
        cp temp/soundfont.dls $TEMP

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: 'Copy from TEMP'
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp $TEMP/soundfont.dls temp/soundfont.dls

    - name: 'Store DLS Cache'
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: soundfont.dls
        path: temp/soundfont.dls
        enableCrossOsArchive: true

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} -VV


